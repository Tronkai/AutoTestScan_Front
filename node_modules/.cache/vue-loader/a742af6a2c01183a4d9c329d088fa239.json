{"remainingRequest":"/Users/tron/Desktop/kkk/AutoTestScan_Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tron/Desktop/kkk/AutoTestScan_Front/src/views/DjedAPI.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tron/Desktop/kkk/AutoTestScan_Front/src/views/DjedAPI.vue","mtime":1591080857077},{"path":"/Users/tron/Desktop/kkk/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":1587967584541},{"path":"/Users/tron/Desktop/kkk/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1587967585051},{"path":"/Users/tron/Desktop/kkk/AutoTestScan_Front/node_modules/vue-loader/lib/index.js","mtime":1587967590332}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaXRlbXMgOlt7fV0KICAgIH0KICB9LAogIG1ldGhvZHM6ewogICAgZ2V0TGlzdCgpewogICAgICB0aGlzLiRheGlvcy5nZXQoIi9kamVkIikKICAgICAgLnRoZW4ocmVzPT57CiAgICAgICAgY29uc29sZS5sb2cocmVzKTsKICAgICAgICB0aGlzLml0ZW1zID0gcmVzLmRhdGE7CiAgICAgIH0pCiAgICB9LAogICAgZm9ybWF0Qm9vbGVhbjogZnVuY3Rpb24gKHJvdywgY29sdW1uLCBjZWxsVmFsdWUpIHsKICAgICAgICAgICAgICB2YXIgcmV0ID0gJycgIAogICAgICAgICAgICAgIGlmIChjZWxsVmFsdWUgPT0gMSkgewogICAgICAgICAgICAgICAgICByZXQgPSAi5oiQ5YqfIiAgCiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcmV0ID0gIuWksei0pSIKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIHJldDsKICAgIH0sCiAgICB0ZXN0OiBmdW5jdGlvbiAocm93LCBjb2x1bW4sIGNlbGxWYWx1ZSkgewogICAgICAgICAgICAgIHJldHVybiBjZWxsVmFsdWUuc3Vic3RyaW5nKDExLDE5KTsKICAgIH0sCiAgICB0ZXN0MjogZnVuY3Rpb24gKHJvdywgY29sdW1uLCBjZWxsVmFsdWUpIHsKICAgICAgICAgICAgICByZXR1cm4gY2VsbFZhbHVlLnN1YnN0cmluZygwLDEwKTsKICAgIH0sCiAgICB0YWJsZVJvd0NsYXNzTmFtZSh7IHJvdyB9KSB7CiAgICBpZiAocm93LnN0YXR1cyA9PTIpIHsKICAgICAgcmV0dXJuICd3YXJuaW5nLXJvdycKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiAnc3VjY2Vzcy1yb3cnCiAgICB9CiAgfQogIH0sCiAgbW91bnRlZDpmdW5jdGlvbigpewogICAgdGhpcy5nZXRMaXN0KCk7CiAgfQp9Owo="},{"version":3,"sources":["DjedAPI.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DjedAPI.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"djedapi\">\n<el-table :data=\"items\" :row-class-name=\"tableRowClassName\">\n       <el-table-column fixed prop=\"time\" :formatter=\"test2\" label=\"日期\" width=\"140\">\n        </el-table-column>\n        <el-table-column prop=\"time\" :formatter=\"test\" label=\"时间\" >\n        </el-table-column>\n        <el-table-column :show-overflow-tooltip=\"true\" prop=\"sucessclass\" label=\"成功用例\">\n        </el-table-column>\n        <el-table-column :show-overflow-tooltip=\"true\" prop=\"failclass\" label=\"失败用例\">\n        </el-table-column>\n        <el-table-column prop=\"sucessnum\" label=\"成功用例数\">\n        </el-table-column>\n        <el-table-column prop=\"failnum\" label=\"失败用例数\">\n        </el-table-column>\n        <el-table-column prop=\"sum\" label=\"总用例数\">\n        </el-table-column>\n        <el-table-column prop=\"status\" :formatter=\"formatBoolean\" label=\"执行结果\">\n        </el-table-column>\n      </el-table>  \n      </div>\n</template>\n<style scoped>\n.el-table .warning-row {\n    background: #F56C6C;\n  }\n\n  .el-table .success-row {\n    background: #f0f9eb;\n  }\n</style>\n<script>\n  export default {\n    data() {\n      return {\n        items :[{}]\n      }\n    },\n    methods:{\n      getList(){\n        this.$axios.get(\"/djed\")\n        .then(res=>{\n          console.log(res);\n          this.items = res.data;\n        })\n      },\n      formatBoolean: function (row, column, cellValue) {\n                var ret = ''  \n                if (cellValue == 1) {\n                    ret = \"成功\"  \n                } else {\n                    ret = \"失败\"\n                }\n                return ret;\n      },\n      test: function (row, column, cellValue) {\n                return cellValue.substring(11,19);\n      },\n      test2: function (row, column, cellValue) {\n                return cellValue.substring(0,10);\n      },\n      tableRowClassName({ row }) {\n      if (row.status ==2) {\n        return 'warning-row'\n      } else {\n        return 'success-row'\n      }\n    }\n    },\n    mounted:function(){\n      this.getList();\n    }\n  };\n</script>\n"]}]}