{"remainingRequest":"/Users/zhukai/Desktop/autotestscan_front/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zhukai/Desktop/autotestscan_front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhukai/Desktop/autotestscan_front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhukai/Desktop/autotestscan_front/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/zhukai/Desktop/autotestscan_front/src/App.vue","mtime":1587048255826},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/autotestscan_front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}