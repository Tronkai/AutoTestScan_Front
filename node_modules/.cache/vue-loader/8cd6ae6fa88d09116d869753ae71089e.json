{"remainingRequest":"/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tron/Documents/AutoTestScan_Front/src/views/Tronscan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tron/Documents/AutoTestScan_Front/src/views/Tronscan.vue","mtime":1675759997719},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":1675062958840},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js","mtime":1675062960652}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZFRpbWU6ICLmnKzlubQiLAogICAgICBpdGVtczogWwogICAgICAgIHsgbmFtZTogJ+i/m+ihjOS4reeahOmhueebru+8micsIG51bWJlcjogJzAwMScgfSwKICAgICAgICB7IG5hbWU6ICflt7LlrozmiJDnmoTpobnnm67vvJonLCBudW1iZXI6ICcwMDInIH0sCiAgICAgICAgeyBuYW1lOiAn5oC75o+Q5LqkQlVH5pWw77yaJywgbnVtYmVyOiAnMDAzJyB9LAogICAgICAgIHsgbmFtZTogJ+W3suS/ruWkjUJVR+aVsO+8micsIG51bWJlcjogJzAwNicgfSwKICAgICAgICB7IG5hbWU6ICfpobnnm67kuIrnur/lubPlnYfnlKjml7bvvJonLCBudW1iZXI6ICcwMDQnIH0sCiAgICAgICAgeyBuYW1lOiAn6aG555uu5rWL6K+V5bmz5Z2H55So5pe277yaJywgbnVtYmVyOiAnMDA1JyB9CiAgICAgIF0sCiAgICAgIHByb2plY3RzOiBbXSwKICAgICAgZGF0ZTogW10KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVNlbGVjdChjb21tYW5kKSB7CiAgICAgIHRoaXMuc2VsZWN0ZWRUaW1lID0gY29tbWFuZDsKICAgICAgaWYgKGNvbW1hbmQgPT09ICLmnKzlkagiKSB7CiAgICAgICAgdGhpcy5zZWxlY3RXZWVrKCk7CiAgICAgIH0gZWxzZSBpZiAoY29tbWFuZCA9PT0gIuacrOaciCIpIHsKICAgICAgICB0aGlzLnNlbGVjdE1vbnRoKCk7CiAgICAgIH0gZWxzZSBpZiAoY29tbWFuZCA9PT0gIuacrOWto+W6piIpIHsKICAgICAgICB0aGlzLnNlbGVjdFF1YXJ0ZXIoKTsKICAgICAgfSBlbHNlIGlmIChjb21tYW5kID09PSAi5pys5bm0IikgewogICAgICAgIHRoaXMuc2VsZWN0WWVhcigpOwogICAgICB9CiAgICB9LAogICAgc2VsZWN0V2VlaygpIHsKICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsKICAgICAgY29uc3Qgc3RhcnRPZldlZWsgPSBuZXcgRGF0ZSgKICAgICAgICAgIG5vdy5nZXRGdWxsWWVhcigpLAogICAgICAgICAgbm93LmdldE1vbnRoKCksCiAgICAgICAgICBub3cuZ2V0RGF0ZSgpIC0gbm93LmdldERheSgpCiAgICAgICk7CiAgICAgIGNvbnN0IGVuZE9mV2VlayA9IG5ldyBEYXRlKAogICAgICAgICAgbm93LmdldEZ1bGxZZWFyKCksCiAgICAgICAgICBub3cuZ2V0TW9udGgoKSwKICAgICAgICAgIG5vdy5nZXREYXRlKCkgKyAoNiAtIG5vdy5nZXREYXkoKSkKICAgICAgKTsKICAgICAgdGhpcy5kYXRlID0gW3N0YXJ0T2ZXZWVrLCBlbmRPZldlZWtdLm1hcChkYXRlID0+IGRhdGUudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApKTsKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRlKQoKICAgIH0sCiAgICBzZWxlY3RNb250aCgpIHsKICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTsKICAgICAgY29uc3Qgc3RhcnRPZk1vbnRoID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCAxKTsKICAgICAgY29uc3QgZW5kT2ZNb250aCA9IG5ldyBEYXRlKAogICAgICAgICAgbm93LmdldEZ1bGxZZWFyKCksCiAgICAgICAgICBub3cuZ2V0TW9udGgoKSArIDEsCiAgICAgICAgICAwCiAgICAgICk7CiAgICAgIHRoaXMuZGF0ZSA9IFtzdGFydE9mTW9udGgsIGVuZE9mTW9udGhdLm1hcChkYXRlID0+IGRhdGUudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApKTsKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRlKQoKICAgIH0sCiAgICBzZWxlY3RRdWFydGVyKCkgewogICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOwogICAgICBjb25zdCBxdWFydGVyID0gTWF0aC5mbG9vcigobm93LmdldE1vbnRoKCkgKyAzKSAvIDMpOwogICAgICBjb25zdCBzdGFydE9mUXVhcnRlciA9IG5ldyBEYXRlKAogICAgICAgICAgbm93LmdldEZ1bGxZZWFyKCksCiAgICAgICAgICBxdWFydGVyICogMyAtIDIsCiAgICAgICAgICAxCiAgICAgICk7CiAgICAgIGNvbnN0IGVuZE9mUXVhcnRlciA9IG5ldyBEYXRlKAogICAgICAgICAgbm93LmdldEZ1bGxZZWFyKCksCiAgICAgICAgICBxdWFydGVyICogMywKICAgICAgICAgIDAKICAgICAgKTsKICAgICAgdGhpcy5kYXRlID0gW3N0YXJ0T2ZRdWFydGVyLCBlbmRPZlF1YXJ0ZXJdLm1hcChkYXRlID0+IGRhdGUudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApKTsKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRlKQoKICAgIH0sCiAgICBzZWxlY3RZZWFyKCkgewogICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpOwogICAgICBjb25zdCBzdGFydE9mWWVhciA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCAwLCAxKTsKICAgICAgY29uc3QgZW5kT2ZZZWFyID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIDExLCAzMSk7CiAgICAgIHRoaXMuZGF0ZSA9IFtzdGFydE9mWWVhciwgZW5kT2ZZZWFyXS5tYXAoZGF0ZSA9PiBkYXRlLnRvSVNPU3RyaW5nKCkuc3Vic3RyaW5nKDAsIDEwKSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0ZSkKICAgIH0sCiAgICBnZXREYXRhKCl7CiAgICAgIGNvbnN0IG51bWJlcnMgPSBbMSwgMjAwLCA0LCA4MzIsIDIyMSwgIjU2MOWkqSJdOwoKICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMubWFwKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgIHJldHVybiB7IG5hbWU6IGl0ZW0ubmFtZSwgbnVtYmVyOiBudW1iZXJzW2luZGV4XS50b1N0cmluZygpIH07CiAgICAgIH0pOwogICAgfSwKICAgIGFzeW5jIGZldGNoUHJvamVjdHMoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgLy8g6L+Z6YeM5Y+v5Lul5L2/55SoYXhpb3PmiJblhbbku5bmlrnms5Xlj5HpgIHor7fmsYLojrflj5bmlbDmja4KICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuJGF4aW9zLmdldCgiL3Rlc3QiKTsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKQogICAgICAgIHRoaXMucHJvamVjdHMgPSByZXNwb25zZS5kYXRhOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgICB9CiAgICB9CiAgfSwKICBzZWxlY3RNb250aCgpIHsKICAgIGNvbnN0IG5vdyA9IG5ldyBEYXRlKCk7CiAgICBjb25zdCBzdGFydE9mTW9udGggPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCksIDEpOwogICAgY29uc3QgZW5kT2ZNb250aCA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSArIDEsIDApOwogICAgdGhpcy5kYXRlID0gW3N0YXJ0T2ZNb250aCwgZW5kT2ZNb250aF07CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5zZWxlY3RZZWFyKCk7CiAgICB0aGlzLmZldGNoUHJvamVjdHMoKTsKCiAgfQp9Cg=="},{"version":3,"sources":["Tronscan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Tronscan.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <el-card class=\"big-card\" :body-style=\"{ padding: '0px' }\">\n      <el-date-picker v-model=\"date\" type=\"daterange\" />\n      <el-button @click=\"selectWeek\">本周</el-button>\n      <el-button @click=\"selectMonth\">本月</el-button>\n      <el-button @click=\"selectQuarter\">本季度</el-button>\n      <el-button @click=\"selectYear\">本年</el-button>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\" v-for=\"item in items\" :key=\"item.name\">\n          <div class=\"item-content\">\n            <p>{{item.name}}</p>\n            <p>{{item.number}}</p>\n\n          </div>\n        </el-col>\n      </el-row>\n    </el-card>\n    <el-table :data=\"projects\" border stripe>\n      <el-table-column prop=\"content\" label=\"项目内容\" width=\"500px\">\n        <template slot-scope=\"scope\">\n          <a :href=\"'https://troneco.atlassian.net/browse/' +scope.row.key\">{{ scope.row.content }}</a>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"120px\">\n      </el-table-column>\n      <el-table-column prop=\"expectedTime\" label=\"预计上线时间\" width=\"120px\"></el-table-column>\n      <el-table-column prop=\"bugCount\" label=\"Bug数\" width=\"80px\"></el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" width=\"80px\"></el-table-column>\n    </el-table>\n  </div>\n\n\n</template>\n\n<script>\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      selectedTime: \"本年\",\n      items: [\n        { name: '进行中的项目：', number: '001' },\n        { name: '已完成的项目：', number: '002' },\n        { name: '总提交BUG数：', number: '003' },\n        { name: '已修复BUG数：', number: '006' },\n        { name: '项目上线平均用时：', number: '004' },\n        { name: '项目测试平均用时：', number: '005' }\n      ],\n      projects: [],\n      date: []\n    }\n  },\n  methods: {\n    handleSelect(command) {\n      this.selectedTime = command;\n      if (command === \"本周\") {\n        this.selectWeek();\n      } else if (command === \"本月\") {\n        this.selectMonth();\n      } else if (command === \"本季度\") {\n        this.selectQuarter();\n      } else if (command === \"本年\") {\n        this.selectYear();\n      }\n    },\n    selectWeek() {\n      const now = new Date();\n      const startOfWeek = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate() - now.getDay()\n      );\n      const endOfWeek = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate() + (6 - now.getDay())\n      );\n      this.date = [startOfWeek, endOfWeek].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n\n    },\n    selectMonth() {\n      const now = new Date();\n      const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endOfMonth = new Date(\n          now.getFullYear(),\n          now.getMonth() + 1,\n          0\n      );\n      this.date = [startOfMonth, endOfMonth].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n\n    },\n    selectQuarter() {\n      const now = new Date();\n      const quarter = Math.floor((now.getMonth() + 3) / 3);\n      const startOfQuarter = new Date(\n          now.getFullYear(),\n          quarter * 3 - 2,\n          1\n      );\n      const endOfQuarter = new Date(\n          now.getFullYear(),\n          quarter * 3,\n          0\n      );\n      this.date = [startOfQuarter, endOfQuarter].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n\n    },\n    selectYear() {\n      const now = new Date();\n      const startOfYear = new Date(now.getFullYear(), 0, 1);\n      const endOfYear = new Date(now.getFullYear(), 11, 31);\n      this.date = [startOfYear, endOfYear].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n    },\n    getData(){\n      const numbers = [1, 200, 4, 832, 221, \"560天\"];\n\n      this.items = this.items.map((item, index) => {\n        return { name: item.name, number: numbers[index].toString() };\n      });\n    },\n    async fetchProjects() {\n      try {\n        // 这里可以使用axios或其他方法发送请求获取数据\n        const response = await this.$axios.get(\"/test\");\n        console.log(response.data)\n        this.projects = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  selectMonth() {\n    const now = new Date();\n    const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n    const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    this.date = [startOfMonth, endOfMonth];\n  },\n  created() {\n    this.selectYear();\n    this.fetchProjects();\n\n  }\n}\n</script>\n\n<style>\n.big-card {\n  width: 700px;\n  height: 388px;\n}\n.item-content {\n  padding: 14px;\n  border-right: 1px solid #ccc;\n}\n</style>\n"]}]}