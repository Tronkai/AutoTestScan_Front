{"remainingRequest":"/Users/tron/Documents/AutoTestScan_Front/node_modules/thread-loader/dist/cjs.js!/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js!/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tron/Documents/AutoTestScan_Front/src/views/BTTC.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tron/Documents/AutoTestScan_Front/src/views/BTTC.vue","mtime":1677141507860},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/thread-loader/dist/cjs.js","mtime":1675062960599},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":1675062958840},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js","mtime":1675062960652}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BTTC.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card shadow=\"hover\" v-loading=\"loading\" class=\"big-card\" :body-style=\"{ padding: '0px' }\">\n      <div style=\"display: flex; justify-content: flex-end; margin-top: 15px ;border-bottom: 1px solid #f0f2f3;padding-bottom: 15px\">\n        <span style=\"margin-right: 110px;margin-top: 8px;font-weight: 700\">{{selectedTime}}关键数据</span>\n        <el-button-group class=\"ml-4\">\n          <el-button autofocus  class=\"selected-button\" size=\"large\" @click=\"selectWeek\">本周</el-button>\n          <el-button  class=\"selected-button\" size=\"large\" @click=\"selectMonth\">本月</el-button>\n          <el-button  class=\"selected-button\" size=\"large\" @click=\"selectQuarter\">本季度</el-button>\n          <el-button  class=\"selected-button\" size=\"large\" @click=\"selectYear\" >本年</el-button>\n          <el-date-picker value-format=\"yyyy-MM-dd\"  v-model=\"date\" type=\"daterange\" size=\"large\" @change=\"updateData\" style=\"margin-left: 3px;margin-right: 10px; width: 225px;\" />\n        </el-button-group>\n      </div>\n      <el-row  :gutter=\"20\">\n        <el-col  :span=\"12\" v-for=\"item in items\" :key=\"item.name\">\n          <div class=\"item-content\">\n            <p style=\"color: #91979d;font-size: 14px;text-align:center;margin-right: 80px\">{{item.name}}</p>\n            <p style=\"font-weight: 600;font-size: 15px;text-align:center;margin-right: 80px\">{{item.number}}</p>\n          </div>\n        </el-col>\n      </el-row>\n    </el-card>\n    <el-card shadow=\"hover\">\n      <el-table :row-class-name=\"tableRowClassName\" v-loading=\"loading\"  :data=\"projects\" border>\n        <el-table-column width=\"80px\" label=\"时间记录\" type=\"expand\">\n          <template slot-scope=\"scope\">\n            <el-row style=\"margin-left: 80px\" :gutter=\"20\">\n              <el-col :span=\"5\">\n                <el-card shadow=\"never\" style=\"width: 128px;height: 80px\"><span style=\"color: #91979d\">项目开始时间</span><div>{{ scope.row.projectStartTime }}</div></el-card>\n              </el-col>\n              <el-col :span=\"5\">\n                <el-card shadow=\"never\" style=\"width: 128px\"><span style=\"color: #91979d\">提测时间</span><div>{{ scope.row.testEamilTime }}</div></el-card>\n              </el-col>\n              <el-col :span=\"5\">\n                <el-card shadow=\"never\" style=\"width: 128px\"><span style=\"color: #91979d\">测试开始时间</span><div>{{ scope.row.testStartTime }}</div></el-card>\n              </el-col>\n              <el-col :span=\"5\">\n                <el-card shadow=\"never\" style=\"width: 128px\"><span style=\"color: #91979d\">测试完成时间</span><div>{{ scope.row.testEndTime }}</div></el-card>\n              </el-col>\n\n            </el-row>\n          </template>\n        </el-table-column>\n        <el-table-column  prop=\"content\" label=\"项目内容\" width=\"415px\"><template slot-scope=\"scope\">\n            <a :href=\"'https://troneco.atlassian.net/browse/' +scope.row.key\">{{ scope.row.content }}</a>\n          </template></el-table-column>\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80px\"></el-table-column>\n<!--        <el-table-column prop=\"projectStartTime\" label=\"项目开始时间\" width=\"120px\"></el-table-column>-->\n<!--        <el-table-column prop=\"testEamilTime\" label=\"提测时间\" width=\"120px\"></el-table-column>-->\n<!--        <el-table-column prop=\"testStartTime\" label=\"测试开始时间\" width=\"120px\"></el-table-column>-->\n<!--        <el-table-column prop=\"testEndTime\" label=\"测试完成时间\" width=\"120px\"></el-table-column>-->\n        <el-table-column prop=\"expectedTime\" label=\"预估上线时间\" width=\"120px\"></el-table-column>\n        <el-table-column prop=\"projectEndTime\" label=\"实际上线时间\" width=\"120px\"></el-table-column>\n      </el-table>\n    </el-card>\n\n  </div>\n\n\n</template>\n\n<script>\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      loading: true,\n      projectName:'BTTC',\n      isThisYearSelected: true,\n      selectedTime: \"本周\",\n      items: [],\n      date: [],\n      projects: []\n    }\n  },\n  methods: {\n    tableRowClassName({row}) {\n      if (row.status == \"已完成\"){\n        return 'success-row'\n      }else if (row.status == \"需求暂停\"){\n        return 'warning-row'\n      }\n    },\n    handleSelect(command) {\n      this.selectedTime = command;\n      if (command === \"本周\") {\n        this.selectWeek();\n      } else if (command === \"本月\") {\n        this.selectMonth();\n      } else if (command === \"本季度\") {\n        this.selectQuarter();\n      } else if (command === \"本年\") {\n        this.selectYear();\n      }\n    },\n    updateData(val) {\n      this.loading = true;\n      this.date = val;\n      this.fetchProjectStatus(this.projectName,this.date)\n      this.fetchProjects(this.projectName,this.date)\n    },\n    selectWeek() {\n      this.loading = true;\n      this.selectedTime = \"本周\";\n      this.isThisYearSelected = false;\n      const start = moment().startOf(\"week\").format(\"YYYY-MM-DD\");\n      const end = moment().endOf(\"week\").format(\"YYYY-MM-DD\");\n      this.date = [start, end];\n      this.fetchProjectStatus(this.projectName,this.date);\n      this.fetchProjects(this.projectName,this.date);\n\n    },\n    selectMonth() {\n      this.loading = true;\n      this.selectedTime = \"本月\";\n      this.isThisYearSelected = false;\n      const start = moment().startOf(\"month\").format(\"YYYY-MM-DD\");\n      const end = moment().endOf(\"month\").format(\"YYYY-MM-DD\");\n      this.date = [start, end];\n      this.fetchProjectStatus(this.projectName,this.date);\n      this.fetchProjects(this.projectName,this.date);\n\n    },\n    selectQuarter() {\n      this.loading = true;\n      this.selectedTime = \"本季度\";\n      this.isThisYearSelected = false;\n      const month = moment().month();\n      let quarterStart, quarterEnd;\n      if (month < 3) {\n        quarterStart = moment().set({ month: 0, date: 1 }).format(\"YYYY-MM-DD\");\n        quarterEnd = moment().set({ month: 2, date: 31 }).format(\"YYYY-MM-DD\");\n      } else if (month < 6) {\n        quarterStart = moment().set({ month: 3, date: 1 }).format(\"YYYY-MM-DD\");\n        quarterEnd = moment().set({ month: 5, date: 30 }).format(\"YYYY-MM-DD\");\n      } else if (month < 9) {\n        quarterStart = moment().set({ month: 6, date: 1 }).format(\"YYYY-MM-DD\");\n        quarterEnd = moment().set({ month: 8, date: 30 }).format(\"YYYY-MM-DD\");\n      } else {\n        quarterStart = moment().set({ month: 9, date: 1 }).format(\"YYYY-MM-DD\");\n        quarterEnd = moment().set({ month: 11, date: 31 }).format(\"YYYY-MM-DD\");\n      }\n      this.date = [quarterStart, quarterEnd];\n      this.fetchProjectStatus(this.projectName,this.date)\n      this.fetchProjects(this.projectName,this.date);\n    },\n    selectYear() {\n      this.loading = true;\n      this.selectedTime = \"本年\";\n      const start = moment().startOf(\"year\").format(\"YYYY-MM-DD\");\n      const end = moment().endOf(\"year\").format(\"YYYY-MM-DD\");\n      this.date = [start, end];\n      this.fetchProjectStatus(this.projectName,this.date);\n      this.fetchProjects(this.projectName,this.date);\n    },\n    getData(){\n      const numbers = [];\n      this.items = this.items.map((item, index) => {\n        return { name: item.name, number: numbers[index].toString() };\n      });\n    },\n    async fetchProjects(project,date) {\n      try {\n        const response = await this.$axios.get(\"/epic\",{\n          params:{\n            project: project,\n            startDate: date[0],\n            endDate: date[1]\n          }\n        });\n        this.projects = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async fetchProjectStatus(project,date) {\n      try {\n        const response = await this.$axios.get(\"/status\",{\n          params:{\n            project: project,\n            startDate: date[0],\n            endDate: date[1]\n          }\n        });\n        console.log(response.data)\n        this.items = response.data;\n        this.loading = false;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  created() {\n    this.selectWeek();\n    this.fetchProjects(this.projectName,this.date);\n\n  }\n}\n</script>\n\n<style>\n.big-card {\n  width: 856px;\n  height: 380px;\n}\n.item-content {\n  margin-left: 100px;\n  border-right: 1px solid #ccc;\n}\n\n.el-table .warning-row {\n  background: oldlace;\n}\n\n.el-table .success-row {\n  background: #f0f9eb;\n}\n\n.el-table .doing-row {\n  background: #c6eef8;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}