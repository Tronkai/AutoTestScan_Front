{"remainingRequest":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js!/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tron/Documents/AutoTestScan_Front/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tron/Documents/AutoTestScan_Front/src/views/Home.vue","mtime":1677582782081},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":1675062958840},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js","mtime":1675062960652}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudXJsIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3Ryb24vRG9jdW1lbnRzL0F1dG9UZXN0U2Nhbl9Gcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKaW1wb3J0IEZvcm1hdHRlZFN0cmluZyBmcm9tICdAL2NvbXBvbmVudHMvSGVsbG9Xb3JsZC52dWUnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRm9ybWF0dGVkU3RyaW5nOiBGb3JtYXR0ZWRTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICBidWdMaXN0OiBbXSwKICAgICAgc2hvdzM6IHRydWUsCiAgICAgIGRyYXdlcjogZmFsc2UsCiAgICAgIGJ1ZzogW10sCiAgICAgIGltYWdlVXJsOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldEJ1Z0xpc3Q6IGZ1bmN0aW9uIGdldEJ1Z0xpc3QoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBzdGFydCwgZW5kLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzdGFydCA9IG1vbWVudCgpLnN0YXJ0T2YoIndlZWsiKS5mb3JtYXQoIllZWVktTU0tREQiKTsKICAgICAgICAgICAgICAgIGVuZCA9IG1vbWVudCgpLmVuZE9mKCJ3ZWVrIikuZm9ybWF0KCJZWVlZLU1NLUREIik7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMjsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRheGlvcy5nZXQoIi9vbmxpbmVfYnVnX2xpc3QiLCB7CiAgICAgICAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZTogc3RhcnQsCiAgICAgICAgICAgICAgICAgICAgZW5kRGF0ZTogZW5kCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpcy5idWdMaXN0ID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIF90aGlzLmxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMzsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEwOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1syLCAxMF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0bXNnOiBmdW5jdGlvbiBnZXRtc2coa2V5KSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMyLiRheGlvcy5nZXQoIi9vbmxpbmVfYnVnIiwgewogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBrZXk6IGtleQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMi5idWcgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0Mi50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICBfdGhpczIuZHJhd2VyID0gdHJ1ZTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1swLCA3XV0pOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICB0aGlzLmxvYWRJbWFnZSgpOwogICAgdGhpcy5nZXRCdWdMaXN0KCk7CiAgICB2YXIgY29uZmlnID0gewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgIkF1dGhvcml6YXRpb24iOiAiQmFzaWMgYTJWeWQybHVMbnBvZFVCMGNtOXVMbTVsZEhkdmNtczZRVlJCVkZRemVFWm1SMFl3TkhrMVlsRXdiREUwYzNORmNGbDZjR0pGWDJkWmNFWlpOSFJIVTBaSWFHNUhSV2hvYkV3dGNHVlhXV295YjNVeWJUQTFVbVZNVVdWU2JUbGZabVkwUVd4SlVVcG5kMXBKUlVSMFdFbFFVbEIwVlhJM1QzUlpiR1JoTXkxRmJUTTRURXMxVmxoUVVVbHNMVVY0VmtWVFFqRXpURTVvWWs1M1JVeHRaMmRKTjBGRFNURkVNa2xLUnpkb2VXWkNka05WZW5aeFJtcEZNekZVUVRSbWNETmtNeTA1V0hZNVNsVTNVVFE0UFROR1JUWTVPRFJGIgogICAgICB9LAogICAgICByZXNwb25zZVR5cGU6ICdibG9iJyAvLyDlkYror4lheGlvc+S7peS6jOi/m+WItua1geeahOW9ouW8j+i/lOWbnuWTjeW6lOaVsOaNrgoKICAgIH07CiAgICBheGlvcy5nZXQoJ2h0dHA6Ly9leGFtcGxlLmNvbS9pbWFnZS5qcGcnLCBjb25maWcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChyZXNwb25zZS5kYXRhKTsKICAgICAgX3RoaXMzLmltYWdlVXJsID0gdXJsOwogICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgfSk7CiAgfQp9Ow=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,eAAA,MAAA,6BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA,KAJA;AAKA,MAAA,GAAA,EAAA,EALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KADA,GACA,MAAA,GAAA,OAAA,CAAA,MAAA,EAAA,MAAA,CAAA,YAAA,CADA;AAEA,gBAAA,GAFA,GAEA,MAAA,GAAA,KAAA,CAAA,MAAA,EAAA,MAAA,CAAA,YAAA,CAFA;AAAA;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,MAAA,EAAA;AACA,oBAAA,SAAA,EAAA,KADA;AAEA,oBAAA,OAAA,EAAA;AAFA;AADA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,QAJA;AAUA,gBAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AAXA;AAAA;;AAAA;AAAA;AAAA;AAaA,gBAAA,OAAA,CAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAjBA;AAkBA,IAAA,MAlBA,kBAkBA,GAlBA,EAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,aAAA,EAAA;AACA,kBAAA,MAAA,EAAA;AACA,oBAAA,GAAA,EAAA;AADA;AADA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAOA,gBAAA,MAAA,CAAA,GAAA,GAAA,QAAA,CAAA,IAAA;AAPA;AAAA;;AAAA;AAAA;AAAA;AASA,gBAAA,OAAA,CAAA,KAAA;;AATA;AAWA,gBAAA,MAAA,CAAA,MAAA,GAAA,IAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AA9BA,GAdA;AA8CA,EAAA,OA9CA,qBA8CA;AAAA;;AACA,SAAA,SAAA;AACA,SAAA,UAAA;AACA,QAAA,MAAA,GAAA;AACA,MAAA,OAAA,EAAA;AACA,yBAAA;AADA,OADA;AAIA,MAAA,YAAA,EAAA,MAJA,CAIA;;AAJA,KAAA;AAMA,IAAA,KAAA,CAAA,GAAA,CAAA,8BAAA,EAAA,MAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,GAAA,GAAA,MAAA,CAAA,GAAA,CAAA,eAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,MAAA,MAAA,CAAA,QAAA,GAAA,GAAA;AACA,KAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,MAAA,OAAA,CAAA,KAAA,CAAA,KAAA;AACA,KAPA;AAQA;AA/DA,CAAA","sourcesContent":["\n\n<template>\n\n  <el-card v-loading=\"loading\">\n\n    <img :src=\"imageUrl\" alt=\"My Image\">\n\n\n\n\n    <div slot=\"header\" class=\"clearfix\">\n      <span style=\"font-weight: 600;font-size: 18px;\">本周线上问题</span>\n<!--      <el-button style=\"float: right; padding: 3px 0\" type=\"text\">操作按钮</el-button>-->\n    </div>\n    <div style=\"margin-bottom: 10px;\"  v-for=\"(item, index) in bugList\" :key=\"index\">\n      <div style=\"width: 120px;float: left\"><el-tag style=\"font-weight: 400;font-size: 15px;\" v-show=\"item.projecName\" type=\"success\">{{item.projecName}}</el-tag></div>\n      <el-tag style=\"width:41px;font-weight: 400;font-size: 15px;\" v-show=\"item.bugLevel\" type=\"warning\">{{item.bugLevel}}</el-tag>\n      <el-tag v-show=\"item.onlinetest\" type=\"info\">onlinetest</el-tag>\n      <el-button size=\"small\" @click=\"getmsg(item.key)\" type=\"primary\" style=\"margin-right: 16px;float: right\">\n        查看详情\n      </el-button>\n      <el-drawer\n          title=\"标题\"\n          :visible.sync=\"drawer\"\n          :with-header=\"false\"\n          size=\"60%\">\n        <div style=\"height:100vh; overflow-y: auto;\" v-if=\"bug\">\n          <p>{{ bug.summary }}</p>\n          <FormattedString :inputString=bug.description />\n          <!-- add more data as required -->\n        </div>\n      </el-drawer>\n\n      <el-popover\n          placement=\"top-start\"\n          width=\"300\"\n          trigger=\"hover\"\n          :content=\"item.content\">\n        <el-tag effect=\"plain\" style=\"width:570px;float:right;font-size: 15px;margin-right: 4px\" slot=\"reference\" v-show=\"item.content\"><a target=\"_blank\"  :href=\"'https://troneco.atlassian.net/browse/' +item.key\">{{item.content }}</a></el-tag>\n      </el-popover>\n    </div>\n\n\n  </el-card>\n</template>\n<style scoped>\n\n</style>\n\n<script>\n  import moment from \"moment\";\n  import FormattedString from '@/components/HelloWorld.vue';\n  import axios from 'axios';\n\n  export default {\n    components: {\n      FormattedString,\n    },\n    data() {\n      return {\n        loading: true,\n        bugList : [],\n        show3: true,\n        drawer: false,\n        bug:[],\n        imageUrl: ''\n      }\n    },\n    methods:{\n      async getBugList() {\n        const start = moment().startOf(\"week\").format(\"YYYY-MM-DD\");\n        const end = moment().endOf(\"week\").format(\"YYYY-MM-DD\");\n        try {\n          const response = await this.$axios.get(\"/online_bug_list\", {\n            params: {\n              startDate: start,\n              endDate: end\n            }\n          });\n          this.bugList = response.data;\n          this.loading = false;\n        } catch (error) {\n          console.error(error);\n        }\n\n      },\n      async getmsg(key) {\n        try {\n          const response = await this.$axios.get(\"/online_bug\", {\n            params: {\n              key: key,\n            }\n          });\n          this.bug = response.data;\n        } catch (error) {\n          console.error(error);\n        }\n        this.drawer = true;\n      }\n    },\n    created() {\n      this.loadImage();\n      this.getBugList();\n      const config = {\n        headers: {\n          \"Authorization\":\"Basic a2Vyd2luLnpodUB0cm9uLm5ldHdvcms6QVRBVFQzeEZmR0YwNHk1YlEwbDE0c3NFcFl6cGJFX2dZcEZZNHRHU0ZIaG5HRWhobEwtcGVXWWoyb3UybTA1UmVMUWVSbTlfZmY0QWxJUUpnd1pJRUR0WElQUlB0VXI3T3RZbGRhMy1FbTM4TEs1VlhQUUlsLUV4VkVTQjEzTE5oYk53RUxtZ2dJN0FDSTFEMklKRzdoeWZCdkNVenZxRmpFMzFUQTRmcDNkMy05WHY5SlU3UTQ4PTNGRTY5ODRF\"\n        },\n        responseType: 'blob' // 告诉axios以二进制流的形式返回响应数据\n      };\n      axios.get('http://example.com/image.jpg', config)\n          .then(response => {\n            const url = window.URL.createObjectURL(response.data);\n            this.imageUrl = url;\n          })\n          .catch(error => {\n            console.error(error);\n          });\n    }\n  };\n</script>\n<style>\n.el-tag {\n  margin-left: 12px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 542px;\n}\n</style>"],"sourceRoot":"src/views"}]}