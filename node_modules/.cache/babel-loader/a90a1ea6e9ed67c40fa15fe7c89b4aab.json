{"remainingRequest":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js!/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tron/Documents/AutoTestScan_Front/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tron/Documents/AutoTestScan_Front/src/views/Home.vue","mtime":1677574490602},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":1675062958840},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js","mtime":1675062960652}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3Ryb24vRG9jdW1lbnRzL0F1dG9UZXN0U2Nhbl9Gcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBtb21lbnQgZnJvbSAibW9tZW50IjsKaW1wb3J0IEZvcm1hdHRlZFN0cmluZyBmcm9tICdAL2NvbXBvbmVudHMvSGVsbG9Xb3JsZC52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgRm9ybWF0dGVkU3RyaW5nOiBGb3JtYXR0ZWRTdHJpbmcKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiB0cnVlLAogICAgICBidWdMaXN0OiBbXSwKICAgICAgc2hvdzM6IHRydWUsCiAgICAgIGRyYXdlcjogZmFsc2UsCiAgICAgIGJ1ZzogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRCdWdMaXN0OiBmdW5jdGlvbiBnZXRCdWdMaXN0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgc3RhcnQsIGVuZCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgc3RhcnQgPSBtb21lbnQoKS5zdGFydE9mKCJ3ZWVrIikuZm9ybWF0KCJZWVlZLU1NLUREIik7CiAgICAgICAgICAgICAgICBlbmQgPSBtb21lbnQoKS5lbmRPZigid2VlayIpLmZvcm1hdCgiWVlZWS1NTS1ERCIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDI7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXhpb3MuZ2V0KCIvb25saW5lX2J1Z19saXN0IiwgewogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBzdGFydERhdGU6IHN0YXJ0LAogICAgICAgICAgICAgICAgICAgIGVuZERhdGU6IGVuZAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgX3RoaXMuYnVnTGlzdCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgICAgICAgICBfdGhpcy5sb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTM7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTBdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldG1zZzogZnVuY3Rpb24gZ2V0bXNnKGtleSkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICAgIHZhciByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi4kYXhpb3MuZ2V0KCIvb25saW5lX2J1ZyIsIHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAga2V5OiBrZXkKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBfdGhpczIuYnVnID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTA7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICAgICAgX3RoaXMyLmRyYXdlciA9IHRydWU7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy5nZXRCdWdMaXN0KCk7CiAgfQp9Ow=="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,OAAA,MAAA,MAAA,QAAA;AACA,OAAA,eAAA,MAAA,6BAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA;AADA,GADA;AAIA,EAAA,IAJA,kBAIA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,MAAA,EAAA,KAJA;AAKA,MAAA,GAAA,EAAA;AALA,KAAA;AAOA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KADA,GACA,MAAA,GAAA,OAAA,CAAA,MAAA,EAAA,MAAA,CAAA,YAAA,CADA;AAEA,gBAAA,GAFA,GAEA,MAAA,GAAA,KAAA,CAAA,MAAA,EAAA,MAAA,CAAA,YAAA,CAFA;AAAA;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,GAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,MAAA,EAAA;AACA,oBAAA,SAAA,EAAA,KADA;AAEA,oBAAA,OAAA,EAAA;AAFA;AADA,iBAAA,CAJA;;AAAA;AAIA,gBAAA,QAJA;AAUA,gBAAA,KAAA,CAAA,OAAA,GAAA,QAAA,CAAA,IAAA;AACA,gBAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AAXA;AAAA;;AAAA;AAAA;AAAA;AAaA,gBAAA,OAAA,CAAA,KAAA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAjBA;AAkBA,IAAA,MAlBA,kBAkBA,GAlBA,EAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,MAAA,CAAA,GAAA,CAAA,aAAA,EAAA;AACA,kBAAA,MAAA,EAAA;AACA,oBAAA,GAAA,EAAA;AADA;AADA,iBAAA,CAFA;;AAAA;AAEA,gBAAA,QAFA;AAOA,gBAAA,MAAA,CAAA,GAAA,GAAA,QAAA,CAAA,IAAA;AAPA;AAAA;;AAAA;AAAA;AAAA;AASA,gBAAA,OAAA,CAAA,KAAA;;AATA;AAWA,gBAAA,MAAA,CAAA,MAAA,GAAA,IAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AA9BA,GAbA;AA6CA,EAAA,OA7CA,qBA6CA;AACA,SAAA,UAAA;AACA;AA/CA,CAAA","sourcesContent":["\n\n<template>\n\n  <el-card v-loading=\"loading\">\n    <div slot=\"header\" class=\"clearfix\">\n      <span style=\"font-weight: 600;font-size: 18px;\">本周线上问题</span>\n<!--      <el-button style=\"float: right; padding: 3px 0\" type=\"text\">操作按钮</el-button>-->\n    </div>\n    <div style=\"margin-bottom: 10px;\"  v-for=\"(item, index) in bugList\" :key=\"index\">\n      <div style=\"width: 120px;float: left\"><el-tag style=\"font-weight: 600;font-size: 15px;\" v-show=\"item.projecName\" type=\"success\">{{item.projecName}}</el-tag></div>\n      <el-tag style=\"font-weight: 600;font-size: 15px;\" v-show=\"item.bugLevel\" type=\"warning\">{{item.bugLevel}}</el-tag>\n      <el-tag v-show=\"item.onlinetest\" type=\"info\">onlinetest</el-tag>\n      <el-popover\n          placement=\"top-start\"\n          width=\"300\"\n          trigger=\"hover\"\n          :content=\"item.content\">\n        <el-tag effect=\"plain\" style=\"font-size: 15px;\" slot=\"reference\" v-show=\"item.content\"><a target=\"_blank\"  :href=\"'https://troneco.atlassian.net/browse/' +item.key\">{{item.content }}</a></el-tag>\n      </el-popover>\n      <el-button size=\"small\" @click=\"getmsg(item.key)\" type=\"primary\" style=\"margin-right: 16px;float: right\">\n        查看详情\n      </el-button>\n      <el-drawer\n          title=\"标题\"\n          :visible.sync=\"drawer\"\n          :with-header=\"false\"\n          size=\"60%\">\n        <div style=\"height:100vh; overflow-y: auto;\" v-if=\"bug\">\n          <p>{{ bug.summary }}</p>\n          <FormattedString :inputString=bug.description />\n          <!-- add more data as required -->\n        </div>\n      </el-drawer>\n    </div>\n<!--    <div style=\"margin-bottom: 10px\"  v-for=\"(item, index) in bugList\" :key=\"index\">-->\n<!--      <el-tag v-show=\"item.projecName\" type=\"success\">TronlinkAndroid</el-tag>-->\n<!--      <el-tag v-show=\"item.bugLevel\" type=\"warning\">{{item.bugLevel}}</el-tag>-->\n<!--      <el-tag v-show=\"item.onelinetest\" type=\"info\">onlinetest</el-tag>-->\n<!--      <el-tag v-show=\"item.content\"><a target=\"_blank\"  :href=\"'https://troneco.atlassian.net/browse/' +item.key\">【偶现】DAO治理页面，点击提现JST，点击提现，新弹窗会置于旧弹窗后面；点击兑换选票，点击授权，新弹窗会置于旧弹窗后面</a></el-tag>-->\n<!--    </div>-->\n<!--    <div style=\"margin-bottom: 10px\"  v-for=\"(item, index) in bugList\" :key=\"index\">-->\n<!--      <el-tag v-show=\"item.projecName\" type=\"success\">{{item.projecName}}</el-tag>-->\n<!--      <el-tag v-show=\"item.bugLevel\" type=\"warning\">{{item.bugLevel}}</el-tag>-->\n<!--      <el-tag v-show=\"item.onelinetest\" type=\"info\">onlinetest</el-tag>-->\n<!--      <el-tag v-show=\"item.content\"><a target=\"_blank\"  :href=\"'https://troneco.atlassian.net/browse/' +item.key\">{{item.content }}</a></el-tag>-->\n<!--    </div>-->\n\n\n  </el-card>\n</template>\n<style scoped>\n\n</style>\n\n<script>\n  import moment from \"moment\";\n  import FormattedString from '@/components/HelloWorld.vue';\n\n  export default {\n    components: {\n      FormattedString,\n    },\n    data() {\n      return {\n        loading: true,\n        bugList : [],\n        show3: true,\n        drawer: false,\n        bug:[]\n      }\n    },\n    methods:{\n      async getBugList() {\n        const start = moment().startOf(\"week\").format(\"YYYY-MM-DD\");\n        const end = moment().endOf(\"week\").format(\"YYYY-MM-DD\");\n        try {\n          const response = await this.$axios.get(\"/online_bug_list\", {\n            params: {\n              startDate: start,\n              endDate: end\n            }\n          });\n          this.bugList = response.data;\n          this.loading = false;\n        } catch (error) {\n          console.error(error);\n        }\n\n      },\n      async getmsg(key) {\n        try {\n          const response = await this.$axios.get(\"/online_bug\", {\n            params: {\n              key: key,\n            }\n          });\n          this.bug = response.data;\n        } catch (error) {\n          console.error(error);\n        }\n        this.drawer = true;\n      }\n    },\n    created() {\n      this.getBugList();\n    }\n  };\n</script>\n<style>\n.el-tag {\n  margin-left: 12px;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  max-width: 542px;\n}\n</style>"],"sourceRoot":"src/views"}]}