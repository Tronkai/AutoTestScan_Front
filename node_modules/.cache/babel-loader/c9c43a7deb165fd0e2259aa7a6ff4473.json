{"remainingRequest":"/Users/zhukai/Desktop/ttt/AutoTestScan_Front/node_modules/babel-loader/lib/index.js!/Users/zhukai/Desktop/ttt/AutoTestScan_Front/node_modules/eslint-loader/index.js??ref--13-0!/Users/zhukai/Desktop/ttt/AutoTestScan_Front/src/router/index.js","dependencies":[{"path":"/Users/zhukai/Desktop/ttt/AutoTestScan_Front/src/router/index.js","mtime":1587702686863},{"path":"/Users/zhukai/Desktop/ttt/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/ttt/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhukai/Desktop/ttt/AutoTestScan_Front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgVnVlUm91dGVyIGZyb20gJ3Z1ZS1yb3V0ZXInOwppbXBvcnQgSG9tZSBmcm9tICcuLi92aWV3cy9Ib21lLnZ1ZSc7CmltcG9ydCBUcm9uc2NhblVJIGZyb20gJy4uL3ZpZXdzL1Ryb25zY2FuVUkudnVlJzsKaW1wb3J0IFRyb25zY2FuQVBJIGZyb20gJy4uL3ZpZXdzL1Ryb25zY2FuQVBJLnZ1ZSc7CmltcG9ydCBEamVkQVBJIGZyb20gJy4uL3ZpZXdzL0RqZWRBUEkudnVlJzsKaW1wb3J0IFNjYW4gZnJvbSAnLi4vdmlld3MvU2Nhbi52dWUnOwppbXBvcnQgTG9naW4gZnJvbSAnLi4vY29tcG9uZW50cy9Mb2dpbi52dWUnOwpWdWUudXNlKFZ1ZVJvdXRlcik7CnZhciByb3V0ZXMgPSBbewogIHBhdGg6ICcvaG9tZScsCiAgbmFtZTogJ0hvbWUnLAogIGNvbXBvbmVudDogSG9tZSwKICBjaGlsZHJlbjogW3sKICAgIHBhdGg6ICcvc2NhbicsCiAgICBuYW1lOiAnU2NhbicsCiAgICBjb21wb25lbnQ6IFNjYW4KICB9LCB7CiAgICBwYXRoOiAnL3Ryb25zY2FudWknLAogICAgbmFtZTogJ1Ryb25zY2FuVUknLAogICAgY29tcG9uZW50OiBUcm9uc2NhblVJCiAgfSwgewogICAgcGF0aDogJy90cm9uc2NhbmFwaScsCiAgICBuYW1lOiAnVHJvbnNjYW5BUEknLAogICAgY29tcG9uZW50OiBUcm9uc2NhbkFQSQogIH0sIHsKICAgIHBhdGg6ICcvZGplZGFwaScsCiAgICBuYW1lOiAnRGplZEFQSScsCiAgICBjb21wb25lbnQ6IERqZWRBUEkKICB9XQp9LCB7CiAgcGF0aDogJy9sb2dpbicsCiAgbmFtZTogJ0xvZ2luJywKICBjb21wb25lbnQ6IExvZ2luCn1dOwp2YXIgcm91dGVyID0gbmV3IFZ1ZVJvdXRlcih7CiAgcm91dGVzOiByb3V0ZXMKfSk7IC8vIHJvdXRlci5iZWZvcmVFYWNoKCh0byxmcm9tLG5leHQpID0+IHsKLy8gICBpZih0by5wYXRoID09ICcvbG9naW4nKSByZXR1cm4gbmV4dCgpOwovLyAgIGVsc2UgewovLyAgICAgcmV0dXJuIG5leHQoIi9sb2dpbiIpCi8vICAgfQovLyB9KQoKZXhwb3J0IGRlZmF1bHQgcm91dGVyOw=="},{"version":3,"sources":["/Users/zhukai/Desktop/ttt/AutoTestScan_Front/src/router/index.js"],"names":["Vue","VueRouter","Home","TronscanUI","TronscanAPI","DjedAPI","Scan","Login","use","routes","path","name","component","children","router"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACAP,GAAG,CAACQ,GAAJ,CAAQP,SAAR;AAEA,IAAMQ,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,OADR;AACgBC,EAAAA,IAAI,EAAE,MADtB;AAC6BC,EAAAA,SAAS,EAAEV,IADxC;AAEEW,EAAAA,QAAQ,EAAE,CACR;AACEH,IAAAA,IAAI,EAAE,OADR;AAEEC,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,SAAS,EAAEN;AAHb,GADQ,EAKN;AACAI,IAAAA,IAAI,EAAE,aADN;AAEAC,IAAAA,IAAI,EAAE,YAFN;AAGAC,IAAAA,SAAS,EAAET;AAHX,GALM,EAUR;AACEO,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE,aAFR;AAGEC,IAAAA,SAAS,EAAER;AAHb,GAVQ,EAeR;AACEM,IAAAA,IAAI,EAAE,UADR;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,SAAS,EAAEP;AAHb,GAfQ;AAFZ,CADa,EAyBb;AACEK,EAAAA,IAAI,EAAE,QADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,SAAS,EAAEL;AAHb,CAzBa,CAAf;AAgCA,IAAMO,MAAM,GAAG,IAAIb,SAAJ,CAAc;AAC3BQ,EAAAA,MAAM,EAANA;AAD2B,CAAd,CAAf,C,CAIA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeK,MAAf","sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport Home from '../views/Home.vue'\nimport TronscanUI from '../views/TronscanUI.vue'\nimport TronscanAPI from '../views/TronscanAPI.vue'\nimport DjedAPI from '../views/DjedAPI.vue'\nimport Scan from '../views/Scan.vue'\nimport Login from '../components/Login.vue'\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/home',name: 'Home',component: Home,\n    children :[\n      {\n        path: '/scan',\n        name: 'Scan',\n        component: Scan\n      },{\n        path: '/tronscanui',\n        name: 'TronscanUI',\n        component: TronscanUI\n      },\n      {\n        path: '/tronscanapi',\n        name: 'TronscanAPI',\n        component: TronscanAPI\n      },\n      {\n        path: '/djedapi',\n        name: 'DjedAPI',\n        component: DjedAPI\n      }\n    ]\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login\n  }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\n// router.beforeEach((to,from,next) => {\n//   if(to.path == '/login') return next();\n//   else {\n//     return next(\"/login\")\n//   }\n// })\n\nexport default router\n"]}]}