{"remainingRequest":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js!/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/tron/Documents/AutoTestScan_Front/src/views/Tronscan.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/tron/Documents/AutoTestScan_Front/src/views/Tronscan.vue","mtime":1675759997719},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/babel-loader/lib/index.js","mtime":1675062958840},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/cache-loader/dist/cjs.js","mtime":1675062959021},{"path":"/Users/tron/Documents/AutoTestScan_Front/node_modules/vue-loader/lib/index.js","mtime":1675062960652}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3Ryb24vRG9jdW1lbnRzL0F1dG9UZXN0U2Nhbl9Gcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzZWxlY3RlZFRpbWU6ICLmnKzlubQiLAogICAgICBpdGVtczogW3sKICAgICAgICBuYW1lOiAn6L+b6KGM5Lit55qE6aG555uu77yaJywKICAgICAgICBudW1iZXI6ICcwMDEnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5bey5a6M5oiQ55qE6aG555uu77yaJywKICAgICAgICBudW1iZXI6ICcwMDInCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5oC75o+Q5LqkQlVH5pWw77yaJywKICAgICAgICBudW1iZXI6ICcwMDMnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn5bey5L+u5aSNQlVH5pWw77yaJywKICAgICAgICBudW1iZXI6ICcwMDYnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn6aG555uu5LiK57q/5bmz5Z2H55So5pe277yaJywKICAgICAgICBudW1iZXI6ICcwMDQnCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAn6aG555uu5rWL6K+V5bmz5Z2H55So5pe277yaJywKICAgICAgICBudW1iZXI6ICcwMDUnCiAgICAgIH1dLAogICAgICBwcm9qZWN0czogW10sCiAgICAgIGRhdGU6IFtdCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlU2VsZWN0OiBmdW5jdGlvbiBoYW5kbGVTZWxlY3QoY29tbWFuZCkgewogICAgICB0aGlzLnNlbGVjdGVkVGltZSA9IGNvbW1hbmQ7CgogICAgICBpZiAoY29tbWFuZCA9PT0gIuacrOWRqCIpIHsKICAgICAgICB0aGlzLnNlbGVjdFdlZWsoKTsKICAgICAgfSBlbHNlIGlmIChjb21tYW5kID09PSAi5pys5pyIIikgewogICAgICAgIHRoaXMuc2VsZWN0TW9udGgoKTsKICAgICAgfSBlbHNlIGlmIChjb21tYW5kID09PSAi5pys5a2j5bqmIikgewogICAgICAgIHRoaXMuc2VsZWN0UXVhcnRlcigpOwogICAgICB9IGVsc2UgaWYgKGNvbW1hbmQgPT09ICLmnKzlubQiKSB7CiAgICAgICAgdGhpcy5zZWxlY3RZZWFyKCk7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RXZWVrOiBmdW5jdGlvbiBzZWxlY3RXZWVrKCkgewogICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTsKICAgICAgdmFyIHN0YXJ0T2ZXZWVrID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIG5vdy5nZXRNb250aCgpLCBub3cuZ2V0RGF0ZSgpIC0gbm93LmdldERheSgpKTsKICAgICAgdmFyIGVuZE9mV2VlayA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSwgbm93LmdldERhdGUoKSArICg2IC0gbm93LmdldERheSgpKSk7CiAgICAgIHRoaXMuZGF0ZSA9IFtzdGFydE9mV2VlaywgZW5kT2ZXZWVrXS5tYXAoZnVuY3Rpb24gKGRhdGUpIHsKICAgICAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCk7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGUpOwogICAgfSwKICAgIHNlbGVjdE1vbnRoOiBmdW5jdGlvbiBzZWxlY3RNb250aCgpIHsKICAgICAgdmFyIG5vdyA9IG5ldyBEYXRlKCk7CiAgICAgIHZhciBzdGFydE9mTW9udGggPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCksIDEpOwogICAgICB2YXIgZW5kT2ZNb250aCA9IG5ldyBEYXRlKG5vdy5nZXRGdWxsWWVhcigpLCBub3cuZ2V0TW9udGgoKSArIDEsIDApOwogICAgICB0aGlzLmRhdGUgPSBbc3RhcnRPZk1vbnRoLCBlbmRPZk1vbnRoXS5tYXAoZnVuY3Rpb24gKGRhdGUpIHsKICAgICAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCk7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGUpOwogICAgfSwKICAgIHNlbGVjdFF1YXJ0ZXI6IGZ1bmN0aW9uIHNlbGVjdFF1YXJ0ZXIoKSB7CiAgICAgIHZhciBub3cgPSBuZXcgRGF0ZSgpOwogICAgICB2YXIgcXVhcnRlciA9IE1hdGguZmxvb3IoKG5vdy5nZXRNb250aCgpICsgMykgLyAzKTsKICAgICAgdmFyIHN0YXJ0T2ZRdWFydGVyID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIHF1YXJ0ZXIgKiAzIC0gMiwgMSk7CiAgICAgIHZhciBlbmRPZlF1YXJ0ZXIgPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgcXVhcnRlciAqIDMsIDApOwogICAgICB0aGlzLmRhdGUgPSBbc3RhcnRPZlF1YXJ0ZXIsIGVuZE9mUXVhcnRlcl0ubWFwKGZ1bmN0aW9uIChkYXRlKSB7CiAgICAgICAgcmV0dXJuIGRhdGUudG9JU09TdHJpbmcoKS5zdWJzdHJpbmcoMCwgMTApOwogICAgICB9KTsKICAgICAgY29uc29sZS5sb2codGhpcy5kYXRlKTsKICAgIH0sCiAgICBzZWxlY3RZZWFyOiBmdW5jdGlvbiBzZWxlY3RZZWFyKCkgewogICAgICB2YXIgbm93ID0gbmV3IERhdGUoKTsKICAgICAgdmFyIHN0YXJ0T2ZZZWFyID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIDAsIDEpOwogICAgICB2YXIgZW5kT2ZZZWFyID0gbmV3IERhdGUobm93LmdldEZ1bGxZZWFyKCksIDExLCAzMSk7CiAgICAgIHRoaXMuZGF0ZSA9IFtzdGFydE9mWWVhciwgZW5kT2ZZZWFyXS5tYXAoZnVuY3Rpb24gKGRhdGUpIHsKICAgICAgICByZXR1cm4gZGF0ZS50b0lTT1N0cmluZygpLnN1YnN0cmluZygwLCAxMCk7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGUpOwogICAgfSwKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEoKSB7CiAgICAgIHZhciBudW1iZXJzID0gWzEsIDIwMCwgNCwgODMyLCAyMjEsICI1NjDlpKkiXTsKICAgICAgdGhpcy5pdGVtcyA9IHRoaXMuaXRlbXMubWFwKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsCiAgICAgICAgICBudW1iZXI6IG51bWJlcnNbaW5kZXhdLnRvU3RyaW5nKCkKICAgICAgICB9OwogICAgICB9KTsKICAgIH0sCiAgICBmZXRjaFByb2plY3RzOiBmdW5jdGlvbiBmZXRjaFByb2plY3RzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXhpb3MuZ2V0KCIvdGVzdCIpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICAgIF90aGlzLnByb2plY3RzID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBzZWxlY3RNb250aDogZnVuY3Rpb24gc2VsZWN0TW9udGgoKSB7CiAgICB2YXIgbm93ID0gbmV3IERhdGUoKTsKICAgIHZhciBzdGFydE9mTW9udGggPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCksIDEpOwogICAgdmFyIGVuZE9mTW9udGggPSBuZXcgRGF0ZShub3cuZ2V0RnVsbFllYXIoKSwgbm93LmdldE1vbnRoKCkgKyAxLCAwKTsKICAgIHRoaXMuZGF0ZSA9IFtzdGFydE9mTW9udGgsIGVuZE9mTW9udGhdOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuc2VsZWN0WWVhcigpOwogICAgdGhpcy5mZXRjaFByb2plY3RzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["Tronscan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <el-card class=\"big-card\" :body-style=\"{ padding: '0px' }\">\n      <el-date-picker v-model=\"date\" type=\"daterange\" />\n      <el-button @click=\"selectWeek\">本周</el-button>\n      <el-button @click=\"selectMonth\">本月</el-button>\n      <el-button @click=\"selectQuarter\">本季度</el-button>\n      <el-button @click=\"selectYear\">本年</el-button>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"12\" v-for=\"item in items\" :key=\"item.name\">\n          <div class=\"item-content\">\n            <p>{{item.name}}</p>\n            <p>{{item.number}}</p>\n\n          </div>\n        </el-col>\n      </el-row>\n    </el-card>\n    <el-table :data=\"projects\" border stripe>\n      <el-table-column prop=\"content\" label=\"项目内容\" width=\"500px\">\n        <template slot-scope=\"scope\">\n          <a :href=\"'https://troneco.atlassian.net/browse/' +scope.row.key\">{{ scope.row.content }}</a>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"startTime\" label=\"开始时间\" width=\"120px\">\n      </el-table-column>\n      <el-table-column prop=\"expectedTime\" label=\"预计上线时间\" width=\"120px\"></el-table-column>\n      <el-table-column prop=\"bugCount\" label=\"Bug数\" width=\"80px\"></el-table-column>\n      <el-table-column prop=\"status\" label=\"状态\" width=\"80px\"></el-table-column>\n    </el-table>\n  </div>\n\n\n</template>\n\n<script>\nimport moment from 'moment';\nexport default {\n  data() {\n    return {\n      selectedTime: \"本年\",\n      items: [\n        { name: '进行中的项目：', number: '001' },\n        { name: '已完成的项目：', number: '002' },\n        { name: '总提交BUG数：', number: '003' },\n        { name: '已修复BUG数：', number: '006' },\n        { name: '项目上线平均用时：', number: '004' },\n        { name: '项目测试平均用时：', number: '005' }\n      ],\n      projects: [],\n      date: []\n    }\n  },\n  methods: {\n    handleSelect(command) {\n      this.selectedTime = command;\n      if (command === \"本周\") {\n        this.selectWeek();\n      } else if (command === \"本月\") {\n        this.selectMonth();\n      } else if (command === \"本季度\") {\n        this.selectQuarter();\n      } else if (command === \"本年\") {\n        this.selectYear();\n      }\n    },\n    selectWeek() {\n      const now = new Date();\n      const startOfWeek = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate() - now.getDay()\n      );\n      const endOfWeek = new Date(\n          now.getFullYear(),\n          now.getMonth(),\n          now.getDate() + (6 - now.getDay())\n      );\n      this.date = [startOfWeek, endOfWeek].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n\n    },\n    selectMonth() {\n      const now = new Date();\n      const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n      const endOfMonth = new Date(\n          now.getFullYear(),\n          now.getMonth() + 1,\n          0\n      );\n      this.date = [startOfMonth, endOfMonth].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n\n    },\n    selectQuarter() {\n      const now = new Date();\n      const quarter = Math.floor((now.getMonth() + 3) / 3);\n      const startOfQuarter = new Date(\n          now.getFullYear(),\n          quarter * 3 - 2,\n          1\n      );\n      const endOfQuarter = new Date(\n          now.getFullYear(),\n          quarter * 3,\n          0\n      );\n      this.date = [startOfQuarter, endOfQuarter].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n\n    },\n    selectYear() {\n      const now = new Date();\n      const startOfYear = new Date(now.getFullYear(), 0, 1);\n      const endOfYear = new Date(now.getFullYear(), 11, 31);\n      this.date = [startOfYear, endOfYear].map(date => date.toISOString().substring(0, 10));\n      console.log(this.date)\n    },\n    getData(){\n      const numbers = [1, 200, 4, 832, 221, \"560天\"];\n\n      this.items = this.items.map((item, index) => {\n        return { name: item.name, number: numbers[index].toString() };\n      });\n    },\n    async fetchProjects() {\n      try {\n        // 这里可以使用axios或其他方法发送请求获取数据\n        const response = await this.$axios.get(\"/test\");\n        console.log(response.data)\n        this.projects = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  selectMonth() {\n    const now = new Date();\n    const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n    const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n    this.date = [startOfMonth, endOfMonth];\n  },\n  created() {\n    this.selectYear();\n    this.fetchProjects();\n\n  }\n}\n</script>\n\n<style>\n.big-card {\n  width: 700px;\n  height: 388px;\n}\n.item-content {\n  padding: 14px;\n  border-right: 1px solid #ccc;\n}\n</style>\n"],"sourceRoot":"src/views"}]}